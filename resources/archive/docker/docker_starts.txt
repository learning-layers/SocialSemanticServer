##############
version 1 
##############
echo starting SSS MySQL container ...
docker stop sss.mysql
docker rm sss.mysql
docker run \
-d \
-e "MYSQL_ROOT_USERNAME=sss" \
-e "MYSQL_ROOT_PASSWORD=sss" \
-p 3333:3306 \
--name sss.mysql \
dtheiler/sss.mysql
echo done --> starting SSS MySQL container

echo going to sleep for a while
sleep 5
echo up after sleep

echo starting SSS Tomcat container ...
docker stop sss.tomcat
docker rm sss.tomcat
docker run \
-d \
-p 8390:8080 \
--name sss.tomcat \
dtheiler/sss.tomcat
echo done --> starting SSS Tomcat container ...

echo starting SSS container ...
docker stop sss.sss
docker rm sss.sss
docker run \
-d \
-e "MYSQL_ROOT_USERNAME=sss" \
-e "MYSQL_ROOT_PASSWORD=sss" \
-e "SSS_HOST=host_with_out_protocol" \
-e "SSS_PORT=8390" \
-e "SSS_PORT_FOR_TOMCAT=8391" \
-e "SSS_MYSQL_HOST=host_with_out_protocol" \
-e "SSS_MYSQL_PORT=3333" \
-e "SSS_MYSQL_USERNAME=sss" \
-e "SSS_MYSQL_PASSWORD=sss" \
-e "SSS_MYSQL_SCHEME=sss" \
-e "SSS_AUTH_TYPE=csvFileAuth" \
-e "SSS_TETHYS_USER=sss_tethys_user" \
-e "SSS_TETHYS_PASSSWORD=sss_tethys_password" \
-e "SSS_TETHYS_LAS_USER=sss_las_user" \
-e "SSS_TETHYS_LAS_PASSWORD=sss_las_password" \
-e "SSS_TETHYS_OIDC_CONF_URI=https://api.learning-layers.eu/o/oauth2/.well-known/openid-configuration" \
-e "SSS_TETHYS_OIDC_USER_END_POINT_URI=https://api.learning-layers.eu/o/oauth2/userinfo" \
-p 8391:8390 \
--link sss.mysql:mysql \
--volumes-from sss.tomcat \
--name sss.sss \
dtheiler/sss.sss
echo done --> starting SSS container ...

##############
version 2
##############
#!/bin/bash

# SSS Docker deployment script including MySQL data, MySQL server, Tomcat Server, SSS MySQL schema, SSS Tomcat config, SSS Tomcat REST API, SSS Java application
# make sure to remove priviously created containers first
# or delete ALL existing containers with:
docker rm -f $(docker ps -a -q);

MYSQL_ROOT_PASSWORD="sss";
SSS_MYSQL_USERNAME="sss";
SSS_MYSQL_SCHEME="sss";
LAYERS_API_URI="https://api.learning-layers.eu";

SSS_HOST=$(ifconfig  eth0 | awk '/inet addr/{print substr($2,6)}');
SSS_PORT="8390";
SSS_PORT_FOR_TOMCAT="8391";
SSS_MYSQL_HOST=$(ifconfig  eth0 | awk '/inet addr/{print substr($2,6)}');
SSS_MYSQL_PORT="3307";
SSS_TOMCAT_PORT="8081";
SSS_AUTH_TYPE="csvFileAuth";
SSS_TETHYS_USER="SSSUser";
SSS_TETHYS_PASSSWORD=""; #sss tethys password
SSS_TETHYS_LAS_USER="sss";
SSS_TETHYS_LAS_PASSWORD=""; #sss las password
SSS_TETHYS_OIDC_CONF_URI="$LAYERS_API_URI/o/oauth2/.well-known/openid-configuration";
SSS_TETHYS_OIDC_USER_END_POINT_URI="$LAYERS_API_URI/o/oauth2/userinfo";

echo "Start SSS MySQL data volume"
docker run --name sss.mysql.data dtheiler/sss.mysql.data
echo " -> done"
echo ""

echo "Start SSS MySQL server"
docker run -d -p $SSS_MYSQL_PORT:3306 -e "MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD" --volumes-from sss.mysql.data --name sss.mysql dtheiler/sss.mysql
echo " -> done"
echo ""

echo "Wait 8 seconds for MySql"
echo ""
sleep 8

echo "Start SSS Tomcat server"
docker run -d -p $SSS_TOMCAT_PORT:8080 --name sss.tomcat dtheiler/sss.tomcat
echo " -> done"
echo ""

echo "Create SSS database and user"
SSS_MYSQL_PASSWORD=`docker run --link sss.mysql:mysql dtheiler/sss.mysql.create -p$MYSQL_ROOT_PASSWORD --new-database $SSS_MYSQL_SCHEME --new-user $SSS_MYSQL_USERNAME | grep "mysql" | awk '{split($0,a," "); print a[3]}' | cut -c3-`
echo " -> done"
echo ""

echo "Start SSS"
docker run -d \
-e "SSS_HOST=$SSS_HOST" \
-e "SSS_PORT=$SSS_PORT" \
-e "SSS_PORT_FOR_TOMCAT=$SSS_PORT_FOR_TOMCAT" \
-e "SSS_MYSQL_HOST=$SSS_MYSQL_HOST" \
-e "SSS_MYSQL_PORT=$SSS_MYSQL_PORT" \
-e "SSS_MYSQL_USERNAME=$SSS_MYSQL_USERNAME" \
-e "SSS_MYSQL_PASSWORD=$SSS_MYSQL_PASSWORD" \
-e "SSS_MYSQL_SCHEME=$SSS_MYSQL_SCHEME" \
-e "SSS_AUTH_TYPE=$SSS_AUTH_TYPE" \
-e "SSS_TETHYS_USER=$SSS_TETHYS_USER" \
-e "SSS_TETHYS_PASSSWORD=$SSS_TETHYS_PASSSWORD" \
-e "SSS_TETHYS_LAS_USER=$SSS_TETHYS_LAS_USER" \
-e "SSS_TETHYS_LAS_PASSWORD=$SSS_TETHYS_LAS_PASSWORD" \
-e "SSS_TETHYS_OIDC_CONF_URI=$SSS_TETHYS_OIDC_CONF_URI" \
-e "SSS_TETHYS_OIDC_USER_END_POINT_URI=$SSS_TETHYS_OIDC_USER_END_POINT_URI" \
-p $SSS_PORT_FOR_TOMCAT:$SSS_PORT --link sss.mysql:mysql --volumes-from sss.tomcat --volumes-from sss.mysql.data --name sss.sss dtheiler/sss.sss
echo " -> done"
echo ""

##############
version 3
##############
echo start sss mysql container...
docker stop sss.mysql
docker rm sss.mysql
docker run \
-d \
-e "MYSQL_ROOT_USERNAME=sss" \
-e "MYSQL_ROOT_PASSWORD=sss" \
-p 3333:3306 \
--name sss.mysql \
dtheiler/sss.mysql
echo started sss mysql container

echo start sss container...
docker stop sss.sss
docker rm sss.sss
docker run \
-d \
-e "MYSQL_ROOT_USERNAME=sss" \
-e "MYSQL_ROOT_PASSWORD=sss" \
-e "SSS_HOST=kcs-evolution.know.know-center.at" \
-e "SSS_PORT=8390" \
-e "SSS_PORT_FOR_TOMCAT=8391" \
-e "SSS_MYSQL_HOST=kcs-evolution.know.know-center.at" \
-e "SSS_MYSQL_PORT=3333" \
-e "SSS_MYSQL_USERNAME=sss" \
-e "SSS_MYSQL_PASSWORD=sss" \
-e "SSS_MYSQL_SCHEME=sss" \
-e "SSS_AUTH_TYPE=csvFileAuth" \
-e "SSS_TETHYS_USER=SSSUser" \
-e "SSS_TETHYS_PASSSWORD=f74UH~X#WVQ" \
-e "SSS_TETHYS_LAS_USER=sss" \
-e "SSS_TETHYS_LAS_PASSWORD=ssstest" \
-e "SSS_TETHYS_OIDC_CONF_URI=https://api.learning-layers.eu/o/oauth2/.well-known/openid-configuration" \
-e "SSS_TETHYS_OIDC_USER_END_POINT_URI=https://api.learning-layers.eu/o/oauth2/userinfo" \
-p 8391:8390 \
--link sss.mysql:mysql \
--volumes-from sss.tomcat \
--name sss.sss \
dtheiler/sss.sss
echo sss container started

echo start sss tomcat container...
docker stop sss.tomcat
docker rm sss.tomcat
docker run \
-d \
-p 8390:8080 \
--name sss.tomcat \
dtheiler/sss.tomcat
echo sss tomcat container started

echo start sss solr container...
docker stop sss.solr
docker rm sss.solr
docker run \
-t \
-i \
-p 9999:8983 \
--name sss.solr \
dtheiler/sss.solr /bin/bash
echo sss solr container started

echo start knowbrain container...
docker stop sss.knowbrain
docker rm sss.knowbrain
docker run \
-d \
-e "SSS_CLIENT_SIDE_LIB_PATH=http://kcs-evolution.know.know-center.at:8390/sssclientside" \
--volumes-from sss.tomcat \
--name sss.knowbrain \
dtheiler/sss.knowbrain
echo knowbrain container started